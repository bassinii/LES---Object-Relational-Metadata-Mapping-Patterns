{"name":"LES - Object-Relational Metadata Mapping Patterns","tagline":"Trabalho 3 da disciplina de Laboratorio de Engenharia de Software","body":"# Metadata Mapping \r\n\r\nGuarda detalhes de mapeamento objeto-relacional em metadados.\r\n\r\n![](https://www.google.com.br/url?sa=i&rct=j&q=&esrc=s&source=images&cd=&cad=rja&uact=8&ved=0CAcQjRw&url=http%3A%2F%2Fmartinfowler.com%2FeaaCatalog%2FmetadataMapping.html&ei=J3-aVe-PF4efNo7Oo5gP&bvm=bv.96952980,d.cWw&psig=AFQjCNHKoXASoLveXR89N1OvoKzCLGn5mQ&ust=1436274847864495)\r\n\r\n\r\nO código que lida com o mapeamento objeto-relacional descreve como os campos no banco de dados correspondem a campos em objetos.\r\n* Enfadonho\r\n* Repetitivo.\r\nUm mapeamento de metadados permite aos programadores definir os mapeamentos de uma forma simples, que então é processado pelo código genérico para realizar a leitura, inserção, e a atualização dos dados. \r\n\r\n## Como Funciona:\r\nA maior decisão em usar Metadados Mapeamento é a forma como as informações nos metadados se manifesta em termos de execução de código. Existem duas principais rotas a tomar:\r\n* Geração de código;\r\n* Programação reflexiva;\r\n\r\n### Geração de Código:\r\nA aplicação recebe como entrada metadados e cuja saída é o código-fonte das classes que fazem o mapeamento. \r\nAs classes geradas nunca devem ser editadas manualmente.\r\nMenos dinâmico: \r\n* Quaisquer alterações no mapeamento requerem recompilação e redistribuição.\r\n\r\n### Programação Reflexiva:\r\nTrata os métodos (e campos) como dados.\r\nO programa reflexivo pode ler o nome do campo ou do método em um arquivo de metadados e usá-los para realizar o mapeamento.\r\nÉ desencorajado de se usar programação reflexiva pois:\r\n* Lento;\r\n* Difícil depuração\r\nPorem torna a aplicação mais flexível.\r\n\r\nNa maioria das vezes você mantenha os metadados em um formato de arquivo separado.\r\nAtualmente XML é uma escolha popular, pois proporciona estruturação hierárquica, libertando-o de escrever seus próprios analisadores e outras ferramentas.\r\nUm dos desafios dos metadados é que existem casos onde terá que ser adicionado uma grande complexidade de metadados, uma alternativa útil é sobrescrever o código genérico .\r\n\r\n## Quando Usá-lo:\r\nEsse padrão reduz muito a quantidade de trabalho para tratar o mapeamento em um banco de dados, mas o trabalho de configuração é requerido para preparar o framework. O mapeamento em metadados pode interferir na refatoração, mas por outro lado pode tornar a refatoração no banco de dados mais fácil, já que os metadados representam uma declaração na interface.\r\n\r\n## Exemplo: \r\n\r\n\r\n# Query Object (Objeto de Pesquisa) \r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}